clear all;
constants;

f =  @(x)  (x(1) + x(2)) *2* h / x(4);
options = optimoptions('fmincon','Display','iter','Algorithm','sqp');

problem.options = options;
problem.solver = 'fmincon';
problem.objective = f;
problem.nonlcon = @constraints;
problem.x0 = [1,1,1,1];

[x, fval] = fmincon(problem);


fprintf('\n The minimum objective of %f with a max nominal stress of %f is reached for: \n', obj_min, 1 / obj_min)
fprintf('w_a* = %f \n', x(1));
fprintf('w_b* = %f \n', x(2));
fprintf('L* = %f \n', x(3));
fprintf('F* = %f \n', x(4));

fprintf('And occurs for the following constraint values: \n');
fprintf('g1a = %f \n', eval(subs(sym(g1a), [wa, wb, L, F], [wa_best, wb_best, L_best, F_best])));
fprintf('g1b = %f \n', eval(subs(sym(g1b), [wa, wb, L, F], [wa_best, wb_best, L_best, F_best])));
fprintf('g2 = %f \n', eval(subs(sym(g2), [wa, wb, L, F], [wa_best, wb_best, L_best, F_best])));
fprintf('g3_1 = %f \n', eval(subs(sym(g3_1), [wa, wb, L, F], [wa_best, wb_best, L_best, F_best])));
fprintf('g3_2 = %f \n', eval(subs(sym(g3_2), [wa, wb, L, F], [wa_best, wb_best, L_best, F_best])));
fprintf('g4a = %f \n', eval(subs(sym(g4a), [wa, wb, L, F], [wa_best, wb_best, L_best, F_best])));
fprintf('g4b = %f \n', eval(subs(sym(g4b), [wa, wb, L, F], [wa_best, wb_best, L_best, F_best])));
fprintf('g5a = %f \n', eval(subs(sym(g5a), [wa, wb, L, F], [wa_best, wb_best, L_best, F_best])));
fprintf('g5b = %f \n', eval(subs(sym(g5b), [wa, wb, L, F], [wa_best, wb_best, L_best, F_best])));
fprintf('g6 = %f \n', eval(subs(sym(g6), [wa, wb, L, F], [wa_best, wb_best, L_best, F_best])));
